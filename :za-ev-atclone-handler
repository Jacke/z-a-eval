# Copyright (c) 2021 Nicholas Serrano
# License MIT

:za-ev-atclone-handler() {

emulate -RL zsh
setopt extendedglob warncreateglobal typesetsilent noshortloops

if [[ "$1" = plugin ]] {
    local type="$1" user="$2" plugin="$3" id_as="$4" dir="${5#%}" hook="$6"
} else {
    local type="$1" url="$2" id_as="$3" dir="${4#%}" hook="$5"
}

#
# eval'' ice – creation of cache file
#

if [[ -n ${ICE[eval]} ]] {
  local cachefile output savedcmd
  local -i ret=0
  [[ -d "$dir" ]] || {
    +zinit-message "{pre}eval annex: {warn}Warning: {msg}Unable to find directory for {pid}$id_as{msg}, skipping...{rst}"
    return $?
  }
  cachefile="$dir/evalcache.zsh"
  @zinit-substitute 'ICE[eval]'
  output="$((( ${+ICE[nocd]} == 0 )) && builtin cd -q "$dir"; eval ${ICE[eval]#!})"
  ret=$?
  if (( ret )) && [[ ${ICE[eval]:0:1} != "!" ]] {
    +zinit-message "{pre}eval annex: {warn}Warning: {msg}Output of (\`{cmd}${${ICE[eval]#!}:0:25}{…}{msg}') returned {error}$ret{msg}, not caching{rst}"
    builtin print '' > "$cachefile"
    return 0
  } else {
    if (( !OPTS[opt_-q,--quiet] )) && [[ $hook != "atinit" ]] {
      +zinit-message "{pre}eval annex: {msg}Caching output of (\`{cmd}${${ICE[eval]#!}:0:25}{…}{msg}'){rst}"
    }

    builtin print -r -- "# ${(q)ICE[eval]#!}
# generated with z-a-eval annex
if (( ZINIT_Z_A_EVAL_SOURCED )) { return; }
typeset -i ZINIT_Z_A_EVAL_SOURCED=1" >! "$cachefile"
    builtin print -r -- "${output}" >>! "$cachefile"
    zcompile -U "$cachefile"
  }
}
}
